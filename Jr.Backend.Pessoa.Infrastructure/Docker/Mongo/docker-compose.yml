version: '3'
services:
  node1:
    image: mongo
    container_name: "node1"
    ports:
      - 27017:27017
    volumes:
      - ${MONGO_HOST_DATA}/node1:/data/db
    networks:
      - mongocluster
    command: mongod --replSet comments
  node2:
    image: mongo
    container_name: "node2"
    ports:
      - 27018:27017
    volumes:
      - ${MONGO_HOST_DATA}/node2:/data/db
    networks:
      - mongocluster
    command: mongod --replSet comments
    depends_on :
      - node1
  node3:
    image: mongo
    container_name: "node3"
    ports:
      - 27019:27017
    volumes:
      - ${MONGO_HOST_DATA}/node3:/data/db
    networks:
      - mongocluster
    command: mongod --replSet comments
    depends_on :
        - node2

networks:
  mongocluster:
    driver: bridge


#configurations
#step1
# docker exec -it mongo_node1_1 mongo

#step2
# db = (new Mongo('localhost:27017')).getDB('test')

#step3 
# config = {
#  "_id": "comments",
#  "members": [
#    {
#      "_id": 0,
#      "host": "node1:27017"
#    },
#    {
#      "_id": 1,
#      "host": "node2:27017"
#    },
#    {
#      "_id": 2,
 #     "host": "node3:27017"
 #  }
 # ]
#}

#step4
# rs.initiate(config)